---
  - name: Configure ubu1 and ubu2
    hosts: ubu1, ubu2
    become: yes
    tasks:
      - name: Allow SSH
        ufw:
          rule: allow
          port: 22
  
      - name: Enable UFW
        ufw:
          state: enabled
  
      - name: Allow HTTP and HTTPS (for Nginx on ubu1)
        ufw:
          rule: allow
          port: "{{ item }}"
        loop:
          - 80
          - 443
        when: inventory_hostname == 'ubu1'
  
      - name: Allow Elasticsearch, Logstash, and Kibana ports (for ELK stack on ubu2)
        ufw:
          rule: allow
          port: "{{ item }}"
        loop:
          - 9200   # Elasticsearch
          - 5044   # Logstash
          - 5601   # Kibana
        when: inventory_hostname == 'ubu2'
  
      - name: Allow Filebeat to communicate with Logstash and Elasticsearch
        ufw:
          rule: allow
          port: 5044
        when: inventory_hostname == 'ubu1'
        
      - name: Reload UFW to apply changes
        command: ufw reload
  
      - name: Ensure unwanted services are stopped
        block:
          - name: Check if service exists
            shell: systemctl status {{ item }}
            register: service_check
            failed_when: false
            changed_when: false
            loop:
              - cups
              - avahi-daemon
              - xinetd
            loop_control:
              label: "{{ item }}"
  
          - name: Stop unwanted services if they exist
            service:
              name: "{{ item }}"
              state: stopped
              enabled: no
            when: "service_check.results is defined and service_check.results[loop.index0] is defined and service_check.results[loop.index0].rc == 0"
            loop:
              - cups
              - avahi-daemon
              - xinetd
            loop_control:
              label: "{{ item }}"
  
      - name: Ensure unwanted packages are removed if installed
        block:
          - name: Gather facts for installed packages
            ansible.builtin.package_facts:
  
          - name: Remove packages if they are installed
            ansible.builtin.package:
              name: "{{ item }}"
              state: absent
            when: ansible_facts.packages[item] is defined
            loop:
              - cups
              - avahi-daemon
              - xinetd
            loop_control:
              label: "{{ item }}"
  
      - name: Basic SSH hardening
        lineinfile:
          path: /etc/ssh/sshd_config
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
          state: present
        with_items:
          - { regexp: '^#?PermitRootLogin', line: 'PermitRootLogin no' }
          - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
          - { regexp: '^#?PermitEmptyPasswords', line: 'PermitEmptyPasswords no' }
        notify: Restart SSH
  
    handlers:
      - name: Restart SSH
        service:
          name: ssh
          state: restarted
  
  - name: Add Elastic GPG key and repository
    hosts: all
    become: yes
    tasks:
      - name: Add Elastic GPG key using apt-key adv
        ansible.builtin.command: "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D27D666CD88E42B4"
        register: add_gpg_key
        failed_when: add_gpg_key.rc != 0
  
      - name: Add Elastic repository if not already present
        ansible.builtin.apt_repository:
          repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
          state: present
          filename: 'elastic-7.x'
        when: ansible_distribution == "Ubuntu"

  - name: Setup LEMP stack on ubu1
    hosts: ubu1
    become: yes
    tasks:
      - name: Install Nginx, MySQL, PHP
        apt:
          name: "{{ item }}"
          state: present
          update_cache: yes
        loop:
          - nginx
          - mysql-server
          - php-fpm
          - php-mysql
  
      - name: Ensure Nginx is started
        service:
          name: nginx
          state: started
          enabled: true
  
  - name: Setup ELK stack on ubu2
    hosts: ubu2
    become: yes
    tasks:
      - name: Update apt cache
        ansible.builtin.apt:
          update_cache: yes
  
      - name: Install ElasticSearch, Logstash, Kibana
        apt:
          name: "{{ item }}"
          state: present
          update_cache: yes
        loop:
          - elasticsearch
          - logstash
          - kibana
  
      - name: Configure Elasticsearch and start service
        service:
          name: elasticsearch
          state: started
          enabled: true
  
      - name: Configure Logstash and start service
        service:
          name: logstash
          state: started
          enabled: true
  
      - name: Configure Kibana and start service
        service:
          name: kibana
          state: started
          enabled: true

      - name: Create Logstash configuration file for Filebeat input
        copy:
          dest: /etc/logstash/conf.d/02-beats-input.conf
          content: |
            input {
              beats {
                port => 5044
              }
            }
            output {
              elasticsearch {
                hosts => ["http://localhost:9200"]
                index => "filebeat-%{+YYYY.MM.dd}"
              }
              stdout { codec => rubydebug }
            }

      - name: Restart Logstash to apply configuration changes
        service:
          name: logstash
          state: restarted
  
  - name: Configure Nginx logs monitoring on ubu2
    hosts: ubu1
    become: yes
    vars:
      ubu2_address: "192.168.0.103"
    tasks:
      - name: Update apt cache
        ansible.builtin.apt:
          update_cache: yes

      - name: Install Filebeat to forward logs to ELK
        ansible.builtin.apt:
          name: filebeat
          state: present
  
      - name: Configure Filebeat to send logs to Logstash
        copy:
          dest: /etc/filebeat/filebeat.yml
          content: |
            filebeat.inputs:
              - type: log
                enabled: true
                paths:
                  - /var/log/nginx/access.log
                  - /var/log/nginx/error.log
            output.elasticsearch:
              hosts: ["{{ ubu2_address }}:9200"]
            #setup.kibana:
            #  host: "http://{{ ubu2_address }}:5601"
  
      - name: Load Filebeat index template in Elasticsearch
        command: "/usr/share/filebeat/bin/filebeat setup --index-management -E output.elasticsearch.hosts=[{{ ubu2_address }}:9200] -c /etc/filebeat/filebeat.yml"
  
      - name: Configure Filebeat for log forwarding to Logstash
        copy:
          dest: /etc/filebeat/filebeat.yml
          content: |
            filebeat.inputs:
              - type: log
                enabled: true
                paths:
                  - /var/log/nginx/access.log
                  - /var/log/nginx/error.log
  
            # Logstash output for actual log forwarding
            output.logstash:
              hosts: ["{{ ubu2_address }}:5044"]
            logging:
              level: info
              to_files: true
              files:
                path: /var/log/filebeat
                name: filebeat
                keepfiles: 7
                permissions: 0644
  
      - name: Enable and start Filebeat
        service:
          name: filebeat
          state: started
          enabled: true